{"version":3,"sources":["NewTaskForm.js","Task.js","TaskList.js","App.js","reportWebVitals.js","index.js","Task.module.css"],"names":["NewTaskForm","onNewTask","useState","newTask","setNewTask","className","styles","task_form","onSubmit","e","preventDefault","task","trim","autoFocus","name","type","value","onChange","currentTarget","Task","done","description","onToggle","onDelete","checked","onClick","TaskList","tasks","task_list","map","index","App","setTasks","useEffect","JSON","parse","localStorage","getItem","setItem","stringify","newTasks","splice","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"0MAQO,SAASA,EAAT,GAAqC,IAAdC,EAAa,EAAbA,UAAa,EACXC,mBAAS,IADE,mBAClCC,EADkC,KACzBC,EADyB,KAGzC,OACE,uBACEC,UAAWC,IAAOC,UAClBC,SAAU,SAACC,GACTA,EAAEC,iBAEF,IAAMC,EAAOR,EAAQS,OACR,KAATD,IAEJP,EAAW,IACXH,EAAUU,KATd,UAYE,uBACEE,UAAuB,KAAZV,EACXW,KAAK,OACLC,KAAK,OACLC,MAAOb,EACPc,SAAU,SAACR,GACTL,EAAWK,EAAES,cAAcF,UAG/B,wBAAQD,KAAK,SAAb,oBCvBC,SAASI,EAAT,GAA0D,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,YAAaC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,SAClD,OACE,6BACE,wBAAOlB,UAAWC,IAAOK,KAAO,KAAOS,EAAOd,IAAOc,KAAO,IAA5D,UACE,uBAAOL,KAAK,WAAWS,QAASJ,EAAMH,SAAUK,IAChD,+BAAOD,IACP,wBAAQN,KAAK,SAASU,QAASF,EAA/B,uBCLD,SAASG,EAAT,GAAkD,IAA9BC,EAA6B,EAA7BA,MAAOL,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,SAC1C,OACE,oBAAIlB,UAAWC,IAAOsB,UAAtB,SACGD,EAAME,KAAI,SAAClB,EAAMmB,GAAP,OACT,cAACX,EAAD,CAEEC,KAAMT,EAAKS,KACXC,YAAaV,EAAKU,YAClBC,SAAU,kBAAMA,EAASQ,IACzBP,SAAU,kBAAMA,EAASO,KAJpBA,QCwBAC,MApCf,WAAgB,IAAD,EACa7B,mBAAS,IADtB,mBACNyB,EADM,KACCK,EADD,KAYb,OATAC,qBAAU,WACR,IAAMN,EAAQO,KAAKC,MAAMC,aAAaC,QAAQ,UAC1CV,GAAOK,EAASL,KACnB,IAEHM,qBAAU,WACRG,aAAaE,QAAQ,QAASJ,KAAKK,UAAUZ,MAC5C,CAACA,IAGF,qCACE,cAAC3B,EAAD,CACEC,UAAW,SAACU,GACVqB,EAAS,GAAD,mBAAKL,GAAL,CAAY,CAAEP,MAAM,EAAOC,YAAaV,SAGpD,cAACe,EAAD,CACEC,MAAOA,EACPL,SAAU,SAACQ,GACT,IAAMU,EAAQ,YAAOb,GACrBa,EAASV,GAAOV,MAAQoB,EAASV,GAAOV,KACxCY,EAASQ,IAEXjB,SAAU,SAACO,GACT,IAAMU,EAAQ,YAAOb,GACrBa,EAASC,OAAOX,EAAO,GACvBE,EAASQ,UCrBJE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,KAAO,mBAAmB,KAAO,mBAAmB,UAAY,wBAAwB,UAAY,2B","file":"static/js/main.c4b502de.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport styles from \"./Task.module.css\";\n\n/**\n *\n * @param {{ onNewTask(task: string): void; }} props\n * @returns\n */\nexport function NewTaskForm({ onNewTask }) {\n  const [newTask, setNewTask] = useState(\"\");\n\n  return (\n    <form\n      className={styles.task_form}\n      onSubmit={(e) => {\n        e.preventDefault();\n\n        const task = newTask.trim();\n        if (task === \"\") return;\n\n        setNewTask(\"\");\n        onNewTask(task);\n      }}\n    >\n      <input\n        autoFocus={newTask === \"\"}\n        name=\"task\"\n        type=\"text\"\n        value={newTask}\n        onChange={(e) => {\n          setNewTask(e.currentTarget.value);\n        }}\n      />\n      <button type=\"submit\">Add</button>\n    </form>\n  );\n}\n","import styles from \"./Task.module.css\";\n\n/**\n * @param {{\n *    done: boolean;\n *    description: string;\n *    onToggle(): void;\n *    onDelete(): void;\n * }} props\n */\nexport function Task({ done, description, onToggle, onDelete }) {\n  return (\n    <li>\n      <label className={styles.task + \" \" + (done ? styles.done : \"\")}>\n        <input type=\"checkbox\" checked={done} onChange={onToggle} />\n        <span>{description}</span>\n        <button type=\"button\" onClick={onDelete}>\n          &times;\n        </button>\n      </label>\n    </li>\n  );\n}\n","import { Task } from \"./Task\";\nimport styles from \"./Task.module.css\";\n\n/**\n * @typedef {{ done: boolean, description: string }} Task\n * @param {{\n *  tasks: Task[];\n *  onToggle(index: number): void;\n *  onDelete(index: number): void;\n * }} props\n */\nexport function TaskList({ tasks, onToggle, onDelete }) {\n  return (\n    <ul className={styles.task_list}>\n      {tasks.map((task, index) => (\n        <Task\n          key={index}\n          done={task.done}\n          description={task.description}\n          onToggle={() => onToggle(index)}\n          onDelete={() => onDelete(index)}\n        />\n      ))}\n    </ul>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport { NewTaskForm } from \"./NewTaskForm\";\nimport { TaskList } from \"./TaskList\";\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n\n  useEffect(() => {\n    const tasks = JSON.parse(localStorage.getItem(\"tasks\"));\n    if (tasks) setTasks(tasks);\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n  }, [tasks]);\n\n  return (\n    <>\n      <NewTaskForm\n        onNewTask={(task) => {\n          setTasks([...tasks, { done: false, description: task }]);\n        }}\n      />\n      <TaskList\n        tasks={tasks}\n        onToggle={(index) => {\n          const newTasks = [...tasks];\n          newTasks[index].done = !newTasks[index].done;\n          setTasks(newTasks);\n        }}\n        onDelete={(index) => {\n          const newTasks = [...tasks];\n          newTasks.splice(index, 1);\n          setTasks(newTasks);\n        }}\n      />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"task\":\"Task_task__3MvKN\",\"done\":\"Task_done__Hqwb2\",\"task_list\":\"Task_task_list__uJRI0\",\"task_form\":\"Task_task_form__2KHvh\"};"],"sourceRoot":""}